<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>bug_record</title>
    <link href="/2023/11/22/bug-record/"/>
    <url>/2023/11/22/bug-record/</url>
    
    <content type="html"><![CDATA[<h1 id="明明传输了数据但是后端收不到"><a href="#明明传输了数据但是后端收不到" class="headerlink" title="明明传输了数据但是后端收不到"></a>明明传输了数据但是后端收不到</h1><p>今天在调试前后端能不能通的时候发现前端在进行post请求时明明传输了data，但是在后端接收的时候，一直是空的。</p><p>前端使用<code>axios</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">axios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;http://localhost:3500/user/register&#x27;</span>, values)<br></code></pre></td></tr></table></figure><p>后端使用<code>express</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/register&#x27;</span>, <span class="hljs-keyword">async</span> (req, res, next) =&gt; &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(req.<span class="hljs-property">body</span>)<br>        res.<span class="hljs-title function_">send</span>(req.<span class="hljs-property">body</span>)<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br><br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p><code>req.body</code>一直都是空</p><p>百度之后发现说是缺少了中间件<code>body-parser</code></p><p>然后我就加上了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<br><span class="hljs-comment">// 这 一步不能缺少，全局解析body-parser，接收两个参数，一个是 【extended: true/false】(是否拓展模式), 另一个是 【limit: 2*1024*1024】(服务器限制接收数据大小2M)))</span><br>server.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">urlencoded</span>(&#123;<br>    <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span>,                <span class="hljs-comment">// 是否拓展模式</span><br>    <span class="hljs-attr">limit</span>: <span class="hljs-number">2</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>          <span class="hljs-comment">// 服务器限制接收数据大小2M</span><br>&#125;))<br></code></pre></td></tr></table></figure><p>但是依然没起效</p><p>后来我从别的地方看到原因。 是因为在请求中，没有设置请求头，也就是没有指明你传递的是什么格式的数据，需要设置请求头中Content-Type值。</p><p>因此，我就在前端请求中添加header</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">axios.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;http://localhost:3500/user/register&#x27;</span>, values, &#123;<br>    <span class="hljs-attr">headers</span>: &#123;<span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>&#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><p>成功获取！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>洁信聊天</title>
    <link href="/2023/11/07/FirstBlog/"/>
    <url>/2023/11/07/FirstBlog/</url>
    
    <content type="html"><![CDATA[<h1 id="洁信"><a href="#洁信" class="headerlink" title="洁信"></a>洁信</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><p>登录</p></li><li><p>注册</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
